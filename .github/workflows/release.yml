# This is the workflow for building release artifacts.
# Optionally, creating a release with those artifacts is possible by pushing a tag.
---
name: Release

on:
  # Allow running this workflow manually from the Actions tab
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - development
    tags:
      - '*'

jobs:
  Build-Release-Artifacts:
    name: Build the release artifacts
    runs-on: self-hosted
    steps:
      - name: Install host dependencies
        run: |
          sudo add-apt-repository -y ppa:dysfunctionalprogramming/minisign
          sudo apt update
          sudo apt install -yq build-essential zip minisign

      - name: Checkout the repo
        uses: actions/checkout@master

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      # TODO: determine if it is possible to break out the build into multiple targets, to enable parallel job execution
      - name: Build Distributions
        run: cargo xtask dist

      - name: Sign binaries
        run: |
          echo -e $MINISIGN_KEY > minisign.key
          echo $MINISIGN_PASSWORD | minisign -Sm target/dist/phylum-linux-x86_64/phylum -s minisign.key -t 'Phylum - the future of software supply chain security'
          echo $MINISIGN_PASSWORD | minisign -Sm target/dist/phylum-macos-x86_64/phylum -s minisign.key -t 'Phylum - the future of software supply chain security'
          echo $MINISIGN_PASSWORD | minisign -Sm target/dist/phylum-macos-aarch64/phylum -s minisign.key -t 'Phylum - the future of software supply chain security'
        env:
          MINISIGN_KEY: ${{ secrets.MINISIGN_KEY }}
          MINISIGN_PASSWORD: ${{ secrets.MINISIGN_PASSWORD }}

      - name: Build zipfiles
        working-directory: ./target/dist
        run: |
          zip -r phylum-linux-x86_64.zip phylum-linux-x86_64
          zip -r phylum-macos-x86_64.zip phylum-macos-x86_64
          zip -r phylum-macos-aarch64.zip phylum-macos-aarch64

      - name: Upload release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-archives
          path: ./target/dist/phylum-*.zip
          if-no-files-found: error
          retention-days: 7

  Release:
    name: Create release from tag
    needs: Build-Release-Artifacts
    # Only run this job when pushing a tag
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: self-hosted
    steps:
      - name: Download release artifacts
        uses: actions/download-artifact@v3
        with:
          name: release-archives

      - name: Create GitHub release
        uses: softprops/action-gh-release@v0.1.14
        with:
          # This check is already filtered down to only 'refs/tags/' and shouldn't "overmatch"
          prerelease: ${{ contains(github.ref, 'rc') }}
          fail_on_unmatched_files: true
          token: ${{ secrets.GITHUB_TOKEN }}
          files: phylum-*.zip
