# This is the workflow for building release artifacts.
# Optionally, creating a release with those artifacts is possible by pushing a tag.
---
name: Release

on:
  # Allow running this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  Generate-Completion-Files:
    name: Generate shell completion files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        run: |
          rustup toolchain install stable --profile minimal
          rustup default stable

      - name: Generate shell completion files
        run: cargo xtask gencomp

      - name: Upload shell completions
        uses: actions/upload-artifact@v3
        with:
          name: shell-completions
          path: ./target/completions/
          if-no-files-found: error
          retention-days: 7

  Build-CLI:
    name: Build the CLI binary
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-20.04
          - target: aarch64-unknown-linux-gnu
            os: [self-hosted, linux, arm64]
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: [self-hosted, macos, arm64]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        run: |
          curl https://sh.rustup.rs -sSf \
            | sh -s -- -y --default-toolchain stable --profile minimal --target ${{ matrix.target }}
          echo "$HOME/.cargo/bin" >> "$GITHUB_PATH"

      - name: Build Distributions
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: phylum-${{ matrix.target }}
          path: ./target/${{ matrix.target }}/release/phylum
          if-no-files-found: error
          retention-days: 7

  Build-Release-Artifacts:
    name: Build the release artifacts
    needs: [Generate-Completion-Files, Build-CLI]
    runs-on: ubuntu-latest
    steps:
      - name: Install host dependencies
        run: sudo apt install -yq zip

      - name: Checkout the repo
        uses: actions/checkout@v3
        with:
          path: cli

      - name: Download release artifacts
        uses: actions/download-artifact@v3

      - name: Prep archives
        run: |
          for archive in phylum-*/;
          do
            archive=$(echo ${archive} | sed -e "s/\/$//")
            cp -R shell-completions ${archive}/completions
            mkdir ${archive}/extensions
            for extension in npm poetry yarn
            do
              cp -R cli/extensions/${extension} ${archive}/extensions/${extension}
            done
            cp cli/cli/src/install.sh ${archive}/install.sh
            chmod a+x ${archive}/phylum
            zip -r ${archive}.zip ${archive}
          done

      - name: Upload release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-archives
          path: phylum-*.zip
          if-no-files-found: error
          retention-days: 7

  Release:
    name: Create release from tag
    needs: Build-Release-Artifacts
    # Only run this job when pushing a tag
    if: startsWith(github.ref, 'refs/tags/')
    environment:
      name: release
      url: ${{ steps.release.outputs.url }}
    runs-on: ubuntu-latest
    steps:
      - name: Download release artifacts
        uses: actions/download-artifact@v3
        with:
          name: release-archives

      - name: Sign archives
        run: |
          echo "$OPENSSL_KEY" > key.pem
          for archive in phylum-*.zip;
          do
            openssl dgst -sha256 -sign key.pem -out "${archive}.signature" "${archive}"
          done
        env:
          OPENSSL_KEY: ${{ secrets.OPENSSL_KEY }}

      - id: release
        name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          # This check is already filtered down to only 'refs/tags/' and shouldn't "overmatch"
          prerelease: ${{ contains(github.ref, 'rc') }}
          fail_on_unmatched_files: true
          token: ${{ github.token }}
          files: |
            phylum-*.zip
            phylum-*.zip.signature

      - name: Trigger phylum-ci Docker image creation
        # Don't trigger for pre-releases
        if: ${{ !contains(github.ref, 'rc') }}
        # Reference: https://docs.github.com/en/rest/repos/repos#create-a-repository-dispatch-event
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_RELEASE_PAT }}
          script: |
            github.rest.repos.createDispatchEvent({
              owner: "phylum-dev",
              repo: "phylum-ci",
              event_type: "build-push-docker-images",
              client_payload: {CLI_version: process.env.GITHUB_REF_NAME},
            });

  Update-Documentation:
    name: Update the documentation
    needs: Release
    # Don't trigger for pre-releases
    if: ${{ !contains(github.ref, 'rc') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Update v2-latest using rdme
        uses: readmeio/rdme@v8
        with:
          rdme: docs ./docs --key=${{ secrets.README_API }} --version=2-latest
