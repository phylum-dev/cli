---
name: Test

on:
  # Allow running this workflow manually from the Actions tab
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  # Run weekly on the default branch to make sure it always builds with the latest rust release
  schedule:
    - cron: '30 5 * * 1'

jobs:
  test-matrix:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        style: [all, default]
        include:
          - style: all
            flags: '--all-features'
          - style: default
            flags: ''
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy

      - name: Install Rust nightly toolchain
        if: github.event_name != 'schedule'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rustfmt

      - uses: Swatinem/rust-cache@v1
        with:
          key: v2-${{matrix.style}}

      - name: Format check
        if: github.event_name != 'schedule' && matrix.style == 'default'
        run: cargo +nightly fmt --all -- --check

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --locked ${{ matrix.flags }}

      - name: Clippy
        if: github.event_name != 'schedule'
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --locked ${{ matrix.flags }} -- -D warnings

      - name: Test
        if: matrix.style == 'default'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --locked ${{ matrix.flags }}

      # Skip this step for external PRs (because it requires a secret)
      - name: Test All Features
        if: matrix.style == 'all' && github.secret_source != 'None'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --locked ${{ matrix.flags }}
        env:
          PHYLUM_API_KEY: ${{ secrets.PHYLUM_TOKEN_STAGING }}

  shellcheck:
    # TODO: Update to `ubuntu-latest` once `ubuntu-22.04` support is stabilized.
    #       https://github.com/phylum-dev/cli/issues/467
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Script Style Check
        if: github.event_name != 'schedule'
        run: shellcheck -o all -S style -s sh $(find . -iname "*.sh")

  # This job reports the results of the test matrix above
  test:
    if: always()
    needs: test-matrix
    runs-on: ubuntu-latest
    steps:
      - if: needs.test-matrix.result != 'success'
        name: Fail the build
        run: exit 1
