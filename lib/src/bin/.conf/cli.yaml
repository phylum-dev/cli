name: phylum
bin_name: phylum
version: "0.0.7"
author: Phylum, Inc.
about: Client interface to the Phylum system
args:
    - config:
        short: c
        long: config
        value_name: FILE
        help: Sets a custom config file
        takes_value: true
    - timeout:
        short: t
        long: timeout
        value_name: TIMEOUT
        help: Set the timeout (in seconds) for requests to the Phylum api
        takes_value: true
subcommands:
    - update:
        about: Check for a new release of the Phylum CLI tool
    - history:
        about: Return information about historical scans
        args:
            - job_id:
                required: false
                takes_value: true
        subcommands:
            - project:
                about: Shows a list of projeccts associated with the user
                args:
                    - project_name:
                        required: false
                        takes_value: true
                        index: 1
                    - job_id:
                        required: false
                        takes_value: true
                        index: 2
    - auth:
        about: Manage authentication, registration, and API keys
        subcommands:
            - register:
                about: Register a new account
            - login:
                about: Login to an existing account
            - keys:
                about: Manage API keys
                after_help: "EXAMPLES


                             # List existing active API keys


                             \tphylum auth list


                             # Create new API key


                             \tphylum auth keys create


                             # Remove (deactivate) an API key


                             \tphylum auth keys remove <api-key>


                             "
                subcommands:
                    - create:
                        about: Create a new API key
                    - list:
                        about: List current API keys
                    - remove:
                        about: Deactivate an API key
                        args:
                            - key_id:
                                required: false
                                takes_value: true
                                index: 1
            - status:
                about: Return the current authentication status

    - ping:
        about: Ping the remote system to verify it is available
    - init:
        about: Initialize a new project
        args:
            - project:
                short: p
                help: The project name.
                takes_value: true
                required: true
    - submit:
        about: Submits a request to the processing system
        args:
            - name:
                short: n
                help: Package name
                takes_value: true
                required: true
            - version:
                short: v
                help: Package version
                takes_value: true
                required: true
            - type:
                short: t
                help: Package type (`npm`, `ruby`, etc)
                takes_value: true
                required: false
            - low-priority: 
                short: L
                takes_value: false
                required: false
            - synch: 
                short: S
                help: "After submitting a request, immediately request status (default: false)"
                takes_value: false
                required: false
            - label:
                short: l
                takes_value: true
                required: false
    - batch:
        about: Submits a batch of requests to the processing system
        args:
            - file:
                short: f
                help: File (or piped stdin) containing the list of packages (format `<name>:<version>`)
                takes_value: true
                required: false
            - type:
                short: t
                help: Package type (`npm`, `ruby`, etc)
                takes_value: true
                required: false
            - low-priority: 
                short: L
                takes_value: false
                required: false
            - synch: 
                short: S
                help: "After submitting a request, immediately request status (default: false)"
                takes_value: false
                required: false
            - label:
                short: l
                takes_value: true
                required: false
    - status:
        about: Polls the system for request / job / package status
        args:
            - request_id:
                short: i
                help: Request ID
                takes_value: true
                required: false
            - name:
                short: n
                help: Package name
                takes_value: true
                required: false
            - version:
                short: v
                help: Package version
                takes_value: true
                required: false
            - type:
                short: t
                help: Package type (`npm`, `ruby`, etc)
                takes_value: true
                required: false
            - threshold:
                short: T
                help: Set a package score threshold (packages with a score below this will cause the application to exit with an error code `STATUS_THRESHOLD_BREACHED [1]`
                takes_value: true
                required: false
            - verbose:
                short: V 
                long: verbose
                help: Increase verbosity of api response.
                takes_value: false
                required: false
            - json:
                short: j
                long: json
                help: "Produce output in json format (default: false)"
    - cancel:
        about: Cancels a request currently in progress
        args:
            - request_id:
                short: i
                help: Request ID
                takes_value: true
                required: true
    - heuristics:
        about: List available heuristics / submit packages for heuristics
        subcommands:
            - submit:
                about: Submit a package to the system for heuristics
                args:
                    - name:
                        short: n
                        help: Package name
                        takes_value: true
                        required: true
                    - version:
                        short: v
                        help: Package version
                        takes_value: true
                        required: true
                    - heuristics:
                        short: h
                        help: "Heuristics to run (comma separated list, default: all available)"
                        takes_value: true
                        required: false
                    - include-deps:
                        short: d
                        help: "Include dependencies (default: false)"
                        takes_value: false
                        required: false
    - version:
        about: Display application version

